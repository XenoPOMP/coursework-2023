import cn from 'classnames';
import { motion } from 'framer-motion';
import { FC } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { Link } from 'react-router-dom';

import { changeLastServicePage } from '@redux/reducers/lastPageSlice';
import { ServiceList } from '@redux/reducers/serviceListSlice';
import IStore from '@redux/types/redux-types';

import useServiceId from '@hooks/useServiceId';

import styles from './ServiceBadge.module.scss';
import { ServiceBadgeProps } from './ServiceBadge.props';

const ServiceBadge: FC<ServiceBadgeProps> = ({ locales }) => {
	const { index, name } = locales;

	const { search, services }: ServiceList = useSelector(
		(state: IStore) => state.serviceList
	);
	const dispatch = useDispatch();

	const getIcon = (): JSX.Element => {
		switch (services[index]?.icon) {
			case 'thunderbolt':
				return (
					<svg
						className={cn(styles.icon)}
						width='15'
						height='19'
						viewBox='0 0 15 19'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'
					>
						<path d='M6.14062 15.1875L10.9922 9.375H7.24219L7.92188 4.05469L3.58594 10.3125H6.84375L6.14062 15.1875ZM3.75 18.75L4.6875 12.1875H0L8.4375 0H10.3125L9.375 7.5H15L5.625 18.75H3.75Z' />
					</svg>
				);

			case 'mall': {
				return (
					<svg
						className={cn(styles.icon)}
						width='15'
						height='18'
						viewBox='0 0 15 18'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'
					>
						<path d='M1.66667 17.5C1.20833 17.5 0.815972 17.3368 0.489583 17.0104C0.163194 16.684 0 16.2917 0 15.8333V5.83333C0 5.375 0.163194 4.98264 0.489583 4.65625C0.815972 4.32986 1.20833 4.16667 1.66667 4.16667H3.33333C3.33333 3.01389 3.73958 2.03125 4.55208 1.21875C5.36458 0.40625 6.34722 0 7.5 0C8.65278 0 9.63542 0.40625 10.4479 1.21875C11.2604 2.03125 11.6667 3.01389 11.6667 4.16667H13.3333C13.7917 4.16667 14.184 4.32986 14.5104 4.65625C14.8368 4.98264 15 5.375 15 5.83333V15.8333C15 16.2917 14.8368 16.684 14.5104 17.0104C14.184 17.3368 13.7917 17.5 13.3333 17.5H1.66667ZM1.66667 15.8333H13.3333V5.83333H1.66667V15.8333ZM7.5 10.8333C8.65278 10.8333 9.63542 10.4271 10.4479 9.61458C11.2604 8.80208 11.6667 7.81944 11.6667 6.66667H10C10 7.36111 9.75694 7.95139 9.27083 8.4375C8.78472 8.92361 8.19444 9.16667 7.5 9.16667C6.80556 9.16667 6.21528 8.92361 5.72917 8.4375C5.24306 7.95139 5 7.36111 5 6.66667H3.33333C3.33333 7.81944 3.73958 8.80208 4.55208 9.61458C5.36458 10.4271 6.34722 10.8333 7.5 10.8333ZM5 4.16667H10C10 3.47222 9.75694 2.88194 9.27083 2.39583C8.78472 1.90972 8.19444 1.66667 7.5 1.66667C6.80556 1.66667 6.21528 1.90972 5.72917 2.39583C5.24306 2.88194 5 3.47222 5 4.16667Z' />
					</svg>
				);
			}

			case 'global': {
				return (
					<svg
						className={cn(styles.icon)}
						width='15'
						height='15'
						viewBox='0 0 15 15'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'
					>
						<path d='M5.55 13.1625C5.325 12.75 5.12813 12.3219 4.95938 11.8781C4.79063 11.4344 4.65 10.975 4.5375 10.5H2.325C2.6875 11.125 3.14062 11.6688 3.68437 12.1313C4.22812 12.5938 4.85 12.9375 5.55 13.1625ZM1.6875 9H4.2375C4.2 8.75 4.17187 8.50312 4.15312 8.25937C4.13437 8.01562 4.125 7.7625 4.125 7.5C4.125 7.2375 4.13437 6.98438 4.15312 6.74063C4.17187 6.49688 4.2 6.25 4.2375 6H1.6875C1.625 6.25 1.57813 6.49688 1.54688 6.74063C1.51562 6.98438 1.5 7.2375 1.5 7.5C1.5 7.7625 1.51562 8.01562 1.54688 8.25937C1.57813 8.50312 1.625 8.75 1.6875 9ZM2.325 4.5H4.5375C4.65 4.025 4.79063 3.56562 4.95938 3.12187C5.12813 2.67812 5.325 2.25 5.55 1.8375C4.85 2.0625 4.22812 2.40625 3.68437 2.86875C3.14062 3.33125 2.6875 3.875 2.325 4.5ZM6.075 4.5H8.925C8.775 3.95 8.58125 3.43125 8.34375 2.94375C8.10625 2.45625 7.825 1.9875 7.5 1.5375C7.175 1.9875 6.89375 2.45625 6.65625 2.94375C6.41875 3.43125 6.225 3.95 6.075 4.5ZM10.4625 4.5H12.675C12.3125 3.875 11.8594 3.33125 11.3156 2.86875C10.7719 2.40625 10.15 2.0625 9.45 1.8375C9.675 2.25 9.87187 2.67812 10.0406 3.12187C10.2094 3.56562 10.35 4.025 10.4625 4.5ZM7.5 15C6.475 15 5.50625 14.8031 4.59375 14.4094C3.68125 14.0156 2.88437 13.4781 2.20312 12.7969C1.52188 12.1156 0.984375 11.3188 0.590625 10.4062C0.196875 9.49375 0 8.525 0 7.5C0 6.4625 0.196875 5.49063 0.590625 4.58438C0.984375 3.67813 1.52188 2.88437 2.20312 2.20312C2.88437 1.52188 3.68125 0.984375 4.59375 0.590625C5.50625 0.196875 6.475 0 7.5 0C8.5375 0 9.50937 0.196875 10.4156 0.590625C11.3219 0.984375 12.1156 1.52188 12.7969 2.20312C13.4781 2.88437 14.0156 3.67813 14.4094 4.58438C14.8031 5.49063 15 6.4625 15 7.5C15 7.625 14.9969 7.75 14.9906 7.875C14.9844 8 14.975 8.125 14.9625 8.25H13.4438C13.4688 8.125 13.4844 8.00312 13.4906 7.88437C13.4969 7.76562 13.5 7.6375 13.5 7.5C13.5 7.2375 13.4844 6.98438 13.4531 6.74063C13.4219 6.49688 13.375 6.25 13.3125 6H10.7625C10.8 6.25 10.8281 6.49688 10.8469 6.74063C10.8656 6.98438 10.875 7.2375 10.875 7.5V7.88437C10.875 8.00312 10.8688 8.125 10.8563 8.25H9.35625C9.36875 8.125 9.375 8.00312 9.375 7.88437V7.5C9.375 7.2375 9.36563 6.98438 9.34688 6.74063C9.32813 6.49688 9.3 6.25 9.2625 6H5.7375C5.7 6.25 5.67187 6.49688 5.65312 6.74063C5.63437 6.98438 5.625 7.2375 5.625 7.5C5.625 7.7625 5.63437 8.01562 5.65312 8.25937C5.67187 8.50312 5.7 8.75 5.7375 9H8.25V10.5H6.075C6.225 11.05 6.41875 11.5688 6.65625 12.0563C6.89375 12.5438 7.175 13.0125 7.5 13.4625C7.6375 13.2625 7.76875 13.0594 7.89375 12.8531C8.01875 12.6469 8.1375 12.4375 8.25 12.225V14.9625C8.125 14.975 8.00312 14.9844 7.88437 14.9906C7.76562 14.9969 7.6375 15 7.5 15ZM13.4625 14.5312L11.25 12.3188V13.9875H9.75V9.75H13.9875V11.25H12.3L14.5125 13.4625L13.4625 14.5312Z' />
					</svg>
				);
			}

			case 'server': {
				return (
					<svg
						className={cn(styles.icon)}
						width='15'
						height='16'
						viewBox='0 0 15 16'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'
					>
						<path d='M3.75 2.5C3.40278 2.5 3.10764 2.62153 2.86458 2.86458C2.62153 3.10764 2.5 3.40278 2.5 3.75C2.5 4.09722 2.62153 4.39236 2.86458 4.63542C3.10764 4.87847 3.40278 5 3.75 5C4.09722 5 4.39236 4.87847 4.63542 4.63542C4.87847 4.39236 5 4.09722 5 3.75C5 3.40278 4.87847 3.10764 4.63542 2.86458C4.39236 2.62153 4.09722 2.5 3.75 2.5ZM3.75 10.8333C3.40278 10.8333 3.10764 10.9549 2.86458 11.1979C2.62153 11.441 2.5 11.7361 2.5 12.0833C2.5 12.4306 2.62153 12.7257 2.86458 12.9687C3.10764 13.2118 3.40278 13.3333 3.75 13.3333C4.09722 13.3333 4.39236 13.2118 4.63542 12.9687C4.87847 12.7257 5 12.4306 5 12.0833C5 11.7361 4.87847 11.441 4.63542 11.1979C4.39236 10.9549 4.09722 10.8333 3.75 10.8333ZM0.833333 0H14.1667C14.4028 0 14.6007 0.0798611 14.7604 0.239583C14.9201 0.399306 15 0.597222 15 0.833333V6.66667C15 6.90278 14.9201 7.10069 14.7604 7.26042C14.6007 7.42014 14.4028 7.5 14.1667 7.5H0.833333C0.597222 7.5 0.399306 7.42014 0.239583 7.26042C0.0798611 7.10069 0 6.90278 0 6.66667V0.833333C0 0.597222 0.0798611 0.399306 0.239583 0.239583C0.399306 0.0798611 0.597222 0 0.833333 0ZM1.66667 1.66667V5.83333H13.3333V1.66667H1.66667ZM0.833333 8.33333H14.1667C14.4028 8.33333 14.6007 8.41319 14.7604 8.57292C14.9201 8.73264 15 8.93056 15 9.16667V15C15 15.2361 14.9201 15.434 14.7604 15.5937C14.6007 15.7535 14.4028 15.8333 14.1667 15.8333H0.833333C0.597222 15.8333 0.399306 15.7535 0.239583 15.5937C0.0798611 15.434 0 15.2361 0 15V9.16667C0 8.93056 0.0798611 8.73264 0.239583 8.57292C0.399306 8.41319 0.597222 8.33333 0.833333 8.33333ZM1.66667 10V14.1667H13.3333V10H1.66667Z' />
					</svg>
				);
			}
		}
	};

	const nameIsMatch = (): boolean => {
		const parsedSearch: string = Array.from(search)
			.map(letter => {
				return `\\${letter}`;
			})
			.join('');

		const pattern: RegExp = new RegExp(`${parsedSearch}`, 'gi');

		return pattern.test(name);
	};

	const getDisplayMode = (): string => {
		if (useServiceId() === index || services[index]?.isFavorite) {
			return '';
		}

		return nameIsMatch() || search === '' ? '' : 'none';
	};

	const Content = (): JSX.Element => {
		if (useServiceId() === index || search === '') {
			return <>{name}</>;
		}

		if (nameIsMatch()) {
			const pattern: RegExp = new RegExp(`(${search})|(\w+)`, 'gi');
			const correctPattern: RegExp = new RegExp(`${search}`, 'gi');
			let output = name.split(pattern);

			return (
				<>
					{output.map(item => {
						return (
							<span
								className={cn(correctPattern.test(item) && styles.highlight)}
							>
								{item}
							</span>
						);
					})}
				</>
			);
		}

		return <>{name}</>;
	};

	return (
		<Link
			to={`/services?serviceId=${index}`}
			style={{
				display: getDisplayMode(),
			}}
			className={cn(
				styles.badge,
				useServiceId() === index ? styles.active : ''
			)}
			onClick={() => {
				dispatch(changeLastServicePage(index));
			}}
		>
			{getIcon()}

			<div className={cn(styles.name)}>
				<Content />
			</div>

			<motion.svg
				initial={{
					opacity: services[index]?.isFavorite ? 1 : 0,
				}}
				animate={{
					opacity: services[index]?.isFavorite ? 1 : 0,
				}}
				transition={{
					duration: 0.15,
				}}
				className={cn(styles.star)}
				width='21'
				height='20'
				viewBox='0 0 21 20'
				fill='none'
				xmlns='http://www.w3.org/2000/svg'
			>
				<path d='M7.69146 13.3046C7.46483 14.2867 7.35152 14.7777 7.61966 14.9721C7.88781 15.1666 8.31932 14.9063 9.18234 14.3858L9.95644 13.9188C10.2096 13.7661 10.3362 13.6898 10.4761 13.6902C10.616 13.6906 10.7421 13.7677 10.9944 13.9219L11.7654 14.393C12.6298 14.9213 13.062 15.1854 13.3315 14.9915C13.601 14.7976 13.4878 14.3038 13.2615 13.3163L13.0581 12.4284C12.9926 12.1428 12.9599 12 13.003 11.8681C13.0462 11.7362 13.157 11.6403 13.3786 11.4486L14.0604 10.859C14.8222 10.2002 15.203 9.87078 15.1014 9.55566C14.9997 9.24054 14.4981 9.19588 13.495 9.10656L12.5989 9.02678C12.3084 9.00091 12.1631 8.98797 12.0513 8.90673C11.9394 8.82549 11.8822 8.69133 11.7678 8.42301L11.3928 7.54366C11.001 6.62507 10.8052 6.16578 10.4753 6.16534C10.1454 6.1649 9.94834 6.62367 9.55414 7.5412L9.18561 8.39898C9.0708 8.66623 9.01339 8.79985 8.90174 8.88073C8.79009 8.96161 8.64523 8.97451 8.35551 9.0003L7.44101 9.08173C6.44405 9.1705 5.94556 9.21489 5.84336 9.52887C5.74116 9.84285 6.118 10.1722 6.87168 10.8308L7.5779 11.4479C7.79768 11.64 7.90757 11.736 7.95014 11.8676C7.99271 11.9992 7.95989 12.1414 7.89426 12.4258L7.69146 13.3046ZM5.99967 18.7794C5.13608 19.3004 4.70429 19.5609 4.43611 19.3663C4.16792 19.1717 4.28157 18.6804 4.50886 17.6978L5.55117 13.1918C5.61727 12.9061 5.65032 12.7632 5.60734 12.6311C5.56435 12.4991 5.45356 12.403 5.23196 12.2109L1.73499 9.17911C0.973115 8.51858 0.592177 8.18832 0.694454 7.8732C0.796731 7.55808 1.29901 7.51448 2.30357 7.42728L6.92884 7.02578C7.22117 7.0004 7.36734 6.98771 7.47973 6.90598C7.59211 6.82425 7.64923 6.68911 7.76347 6.41882L9.55522 2.17941C9.94829 1.24938 10.1448 0.784357 10.4763 0.784357C10.8078 0.784357 11.0044 1.24938 11.3974 2.17941L13.1892 6.41883C13.3034 6.68911 13.3605 6.82425 13.4729 6.90598C13.5853 6.98771 13.7315 7.0004 14.0238 7.02578L18.6491 7.42728C19.6536 7.51448 20.1559 7.55808 20.2582 7.8732C20.3605 8.18832 19.9795 8.51858 19.2177 9.1791L15.7207 12.2109C15.4991 12.403 15.3883 12.4991 15.3453 12.6311C15.3023 12.7632 15.3354 12.9061 15.4015 13.1918L16.4438 17.6978C16.6711 18.6804 16.7847 19.1717 16.5165 19.3663C16.2484 19.5609 15.8166 19.3004 14.953 18.7794L10.9929 16.3905C10.7413 16.2388 10.6155 16.1629 10.4763 16.1629C10.3372 16.1629 10.2114 16.2388 9.95979 16.3905L5.99967 18.7794Z' />
				<path d='M7.69146 13.3046C7.46483 14.2867 7.35152 14.7777 7.61966 14.9721C7.88781 15.1666 8.31932 14.9063 9.18234 14.3858L9.95644 13.9188C10.2096 13.7661 10.3362 13.6898 10.4761 13.6902C10.616 13.6906 10.7421 13.7677 10.9944 13.9219L11.7654 14.393C12.6298 14.9213 13.062 15.1854 13.3315 14.9915C13.601 14.7976 13.4878 14.3038 13.2615 13.3163L13.0581 12.4284C12.9926 12.1428 12.9599 12 13.003 11.8681C13.0462 11.7362 13.157 11.6403 13.3786 11.4486L14.0604 10.859C14.8222 10.2002 15.203 9.87078 15.1014 9.55566C14.9997 9.24054 14.4981 9.19588 13.495 9.10656L12.5989 9.02678C12.3084 9.00091 12.1631 8.98797 12.0513 8.90673C11.9394 8.82549 11.8822 8.69133 11.7678 8.42301L11.3928 7.54366C11.001 6.62507 10.8052 6.16578 10.4753 6.16534C10.1454 6.1649 9.94834 6.62367 9.55414 7.5412L9.18561 8.39898C9.0708 8.66623 9.01339 8.79985 8.90174 8.88073C8.79009 8.96161 8.64523 8.97451 8.35551 9.0003L7.44101 9.08173C6.44405 9.1705 5.94556 9.21489 5.84336 9.52887C5.74116 9.84285 6.118 10.1722 6.87168 10.8308L7.5779 11.4479C7.79768 11.64 7.90757 11.736 7.95014 11.8676C7.99271 11.9992 7.95989 12.1414 7.89426 12.4258L7.69146 13.3046Z' />
			</motion.svg>
		</Link>
	);
};

export default ServiceBadge;
